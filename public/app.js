(()=>{"use strict";const t={events:{},on(t,n){const e=Array.isArray(t)?t:[t];for(let t of e)this.events[t]||(this.events[t]=[]),this.events[t].push(n)},emit(t,n){if(this.events[t])for(let e of this.events[t])e(n)}},n={form:null,init(t){this.form=t,t.innerHTML='\n      <div class="row">\n        <div class="col">\n          <label>Nome</label>\n          <input id="name" name="name" class="form-control form-control-sm" />\n        </div>\n        <div class="col">\n          <label>Descrição</label>\n          <input id="description" name="description" class="form-control form-control-sm"/>\n        </div>\n        <div class="col">\n          <label>Data</label>\n          <input id="date" type="date" name="date" class="form-control form-control-sm"/>\n        </div>\n        <div class="col">\n          <label>Valor</label>\n          <input id="value" type="number" name="value" class="form-control form-control-sm"/>\n        </div>\n        <div class="col">\n          <button class="btn btn-primary mt-3">\n            <i class="bi bi-plus"></i>\n            add\n          </button>\n        </div>\n      </div>\n    ',t.addEventListener("submit",n.onSubmit)},onSubmit(t){t.preventDefault();const e=t.target.querySelectorAll("input"),a={};for(let t of e)a[t.name]=t.value||"";n.addEntry(a)},addEntry(e){fetch("entry",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(e)}).then((()=>{n.clear(),t.emit("newEntry")}))},clear(){const t=this.form.querySelectorAll("input");for(let n of t)n.value=""}},e=n;function a(){return(new Date).toISOString().substring(0,7)}function i(){const t=new Date;return new Date(t.getFullYear(),t.getMonth(),1)}function o(){const t=new Date;return new Date(t.getFullYear(),t.getMonth()+1,0)}const r={init(n){this.getBalance(n,{initialDate:i(),endDate:o()}),t.on(["newEntry","deleteEntry","updateEntry"],(()=>this.getBalance(n,{initialDate:i(),endDate:o()})))},getBalance(t,{initialDate:n,endDate:e}){fetch(`/entry/balance?initialDate=${n.toISOString().substring(0,10)}&endDate=${e.toISOString().substring(0,10)}`).then((t=>t.json())).then((n=>{t.innerHTML=`\n        <div>\n          <label>Total</label>\n          <span>${n.total||0}</span>\n        </div>\n        <div>\n          <label>Despesas</label>\n          <span>${n.loss||0}</span>\n        </div>\n        <div>\n          <label>Ganhos</label>\n          <span>${n.gain||0}</span>\n        </div>\n      `}))}},l={async init(n){n.innerHTML='\n      <thead>\n        <tr>\n          <th style="width: 25%">Nome</th>\n          <th style="width: 35%">Descrição</th>\n          <th style="width: 10%">Conta</th>\n          <th style="width: 5%">Data</th>\n          <th style="width: 25%">Valor</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody></tbody>\n    ',this.loadEntries(n,{initialDate:i(),endDate:o()}),t.on(["newEntry","deleteEntry"],(()=>l.loadEntries(n,{initialDate:i(),endDate:o()}))),t.on("periodChange",(t=>{const{initialDate:e,endDate:a}=function(t){if(!t)throw new Error("invalid year-month: "+t);const n=new Date(`${t}-1`);return{initialDate:n,endDate:new Date(n.getFullYear(),n.getMonth()+1,0)}}(t);this.loadEntries(n,{initialDate:e,endDate:a})}))},deleteEntry(n){var e;(e=`entry/${n}`,fetch(e,{method:"DELETE"})).then((()=>{t.emit("deleteEntry")}))},async loadEntries(n,{initialDate:e,endDate:a}){fetch(`entry?initialDate=${e.toISOString().substring(0,10)}&endDate=${a.toISOString().substring(0,10)}`).then((t=>t.json())).then((e=>{const a=n.querySelector("tbody");a.innerHTML=`\n          ${e.map((t=>`\n            <tr>\n              <input type="hidden" name="id" value="${t.id}" />\n              <td>\n                <input name="name" value="${t.name}" class="form-control form-control-sm updateEntry" />\n              </td>\n              <td>\n                <input name="description" value="${t.description}" class="form-control form-control-sm updateEntry" />\n              </td>\n              <td>\n                <input name="account" value="${t.account}" class="form-control form-control-sm updateEntry" />\n              </td>\n              <td>\n                <input type="date" name="date" value="${t.date}" class="form-control form-control-sm updateEntry" />\n              </td>\n              <td>\n                <input name="value" value="${t.value}" class="form-control form-control-sm updateEntry" />\n              </td>\n              <td>\n                <button data-id="${t.id}" class="btn btn-outline-danger btn-sm">\n                  <i class="bi bi-trash"></i>\n                  Excluir\n                </button>\n              </td>\n            </tr>\n          `)).join("")} \n        `;for(let t of a.querySelectorAll("button"))t.addEventListener("click",(({target:t})=>{const n=t.dataset.id;confirm("Você confirma exclusão?")&&l.deleteEntry(n)}));for(let n of a.querySelectorAll(".updateEntry"))n.addEventListener("change",(()=>{const e=n.parentElement.parentElement.querySelectorAll("input"),a={};for(let t of e)a[t.name]=(t.value||"").trim();fetch(`entry/${a.id}`,{method:"PUT",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(a)}).then((()=>{t.emit("updateEntry")}))}))}))}},s=l,d={init(n){n.innerHTML=`\n      <label>\n        <span>Periodicidade</span>\n        <input id="month" type="month" name="month" value="${a()}" class="form-control mb-2" />\n      </label>\n    `;const e=n.querySelector('[name="month"]');e.addEventListener("change",this.onChange),t.on(["newEntry","deleteEntry"],(()=>e.value=a()))},onChange(n){const e=n.target.value;t.emit("periodChange",e)}},c=document.querySelector("#form_entry");e.init(c);const u=document.querySelector("#table_entries");s.init(u);const m=document.querySelector("#section_balance");r.init(m);const h=document.querySelector("#form_filter");d.init(h)})();