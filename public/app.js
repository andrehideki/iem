(()=>{"use strict";const n={events:{},on(n,e){this.events[n]||(this.events[n]=[]),this.events[n].push(e)},emit(n,e){if(this.events[n])for(let t of this.events[n])t(e)}},e={form:null,init(n){this.form=n,n.innerHTML='\n      <label>\n        <span>Nome</span>\n        <input id="name" name="name"/>\n      </label>\n      <label>\n        <span>Descrição</span>\n        <input id="description" name="description"/>\n      </label>\n      <label>\n        <span>Data</span>\n        <input id="date" type="date" name="date"/>\n      </label>\n      <label>\n        <span>Valor</span>\n        <input id="value" type="number" name="value"/>\n      </label>\n      <button>add</button>\n    ',n.addEventListener("submit",e.onSubmit)},onSubmit(n){n.preventDefault();const t=n.target.querySelectorAll("input"),a={};for(let n of t)a[n.name]=n.value||"";e.addEntry(a)},addEntry(t){fetch("entry",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)}).then((()=>{e.clear(),n.emit("newEntry")}))},clear(){const n=this.form.querySelectorAll("input");for(let e of n)e.value=""}},t=e,a={init(e){this.getBalance(e),n.on("newEntry",(()=>this.getBalance(e)))},getBalance(n){fetch("/entry/balance?initialDate=2021-11-01&endDate=2021-12-01").then((n=>n.json())).then((e=>{n.innerHTML=`\n        <div>\n          <label>Total</label>\n          <span>${e.total||0}</span>\n        </div>\n        <div>\n          <label>Despesas</label>\n          <span>${e.loss||0}</span>\n        </div>\n        <div>\n          <label>Ganhos</label>\n          <span>${e.gain||0}</span>\n        </div>\n      `}))}},i={async init(e){e.innerHTML="\n      <thead>\n        <tr>\n          <th>Nome</th>\n          <th>Descrição</th>\n          <th>Data</th>\n          <th>Valor</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody></tbody>\n    ",this.loadEntries(e),n.on("newEntry",(()=>i.loadEntries(e))),n.on("periodChange",(n=>console.log("fromTable",n)))},async loadEntries(n){fetch("entry").then((n=>n.json())).then((e=>{n.querySelector("tbody").innerHTML=`\n          ${e.map((n=>`\n            <tr>\n              <input type="hidden" value="${n.id}" />\n              <td>\n                <input value="${n.name}" />\n              </td>\n              <td>\n                <input value="${n.description}" />\n              </td>\n              <td>\n                <input value="${n.date}" />\n              </td>\n              <td>\n                <input value="${n.value}" />\n              </td>\n              <td>\n                <button>Excluir</button>\n              </td>\n            </tr>\n          `)).join("")} \n        `}))}},l=i,o={init(n){n.innerHTML='\n      <label>\n        <span>Periodicidade</span>\n        <input id="month" type="month" name="month"/>\n      </label>\n    ',n.querySelector('[name="month"]').addEventListener("change",this.onChange)},onChange(e){const t=e.target.value;n.emit("periodChange",t)}},s=document.querySelector("#form_entry");t.init(s);const r=document.querySelector("#table_entries");l.init(r);const d=document.querySelector("#section_balance");a.init(d);const u=document.querySelector("#form_filter");o.init(u)})();